When I register my form, the netowork in dev tool says that the registration form was filled sucessfully, but. 

This code in accountRoute does not run. 
// Process the registration data
router.post(
    "/register",
    regValidate.registationRules(),
    regValidate.checkRegData,
    (req, res) => {
        console.log(req.body); // Log the request body
        utilities.handleErrors(accountController.registerAccount)(req, res);
    }
)


This code in accountController does not run. 
/* ****************************************
*  Process Registration
* *************************************** */
async function registerAccount(req, res) {
  let nav = await utilities.getNav()
  console.log(req.body); // Add this line to check the contents of req.body
  const { firstName, lastName, email, password } = req.body

  // Hash the password before storing
  let hashedPassword
  try {
    // regular password and cost (salt is generated automatically)
    hashedPassword = await bcrypt.hashSync(account_password, 10)
  } catch (error) {
    req.flash("notice", 'Sorry, there was an error processing the registration.')
    res.status(500).render("account/register", {
      title: "Registration",
      nav
    })
  }

  const regResult = await accountModel.registerAccount(
    firstName,
    lastName,
    email,
    hashedPassword
  )

  console.log(regResult)

  if (regResult) {
    req.flash(
      "notice",
      `Congratulations, you\'re registered ${firstName}. Please log in.`
    )
    res.status(201).render("account/login", {
      title: "Login",
      nav,
    })
  } else {
    req.flash("notice", "Sorry, the registration failed.")
    res.status(501).render("account/register", {
      title: "Registration",
      nav,
    })
  }
}

This code in account-model.js does not run 
/* *****************************
*   Register new account
* *************************** */
async function registerAccount(account_firstname, account_lastname, account_email, account_password){
    console.log("First Name:", account_firstname);
    try {
        const sql = "INSERT INTO account (account_firstname, account_lastname, account_email, account_password, account_type) VALUES ($1, $2, $3, $4, 'Client') RETURNING *"
        return await pool.query(sql, [account_firstname, account_lastname, account_email, account_password])
    } catch (error) {
        console.error("Error registering account:", error.message);
        return error.message
    }
}


There are no errors. 